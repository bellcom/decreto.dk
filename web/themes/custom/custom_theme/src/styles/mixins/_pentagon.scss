@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function pi() {
  @return 3.14159265359;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@mixin pentagon($width: 100, $color: red) {
  $side: ($width / sin(108deg)) * sin(36deg);
  $top_height: sin(36deg) * $side;
  $bottom_height: sin(72deg) * $side;
  $side_border_width: ($width - $side) / 2;

  width: #{$side}px;
  border-width: #{$bottom_height}px #{$side_border_width}px 0;
  border-style: solid;
  border-color: $color transparent;
  height: 0;

  &::before {
    content: "";
    border-style: solid;
    border-width: 0 #{$width/2}px #{$top_height}px;
    position: absolute;
    height: 0;
    width: 0;
    top: #{ceil(-$bottom_height) - floor($top_height)}px;
    left: -#{$side_border_width}px;
    border-color: transparent transparent $color;
  }
}
